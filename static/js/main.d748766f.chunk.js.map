{"version":3,"sources":["Board.js","helper.js","Panel.js","App.js","reportWebVitals.js","index.js"],"names":["Board","boardMatrix","style","backgroundColor","borderRadius","height","width","display","flexDirection","alignItems","justifyContent","map","row","index","cell","console","log","margin","textAlign","generateInitialBoard","initialBoard","firstEntry","getRandomArbitrary","secondEntry","Math","floor","JSON","parse","stringify","min","max","random","handleRight","board","scoreRef","i","length","j","current","k","handleLeft","handleUp","handleDown","checkBoardUpdate","oldBoard","newBoard","Panel","won","setWon","lost","setLost","useRef","bestScoreRef","useState","setBoardMatrix","useEffect","handleKeyPress","event","updatedBoard","keyCode","checkWon","zeros","push","newCellIndex","addNewCell","checkLost","window","addEventListener","removeEventListener","marginTop","fontFamily","border","color","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d748766f.chunk.js","sourcesContent":["const Board = ({boardMatrix}) => {\r\n  //console.log(\"Inside Board\", boardMatrix);\r\n  return (\r\n       <div style={{backgroundColor: \"#bbada0\", borderRadius: \"10px\", height: \"250px\", width: \"250px\",display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n           <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                {boardMatrix.map((row, index) => {\r\n                    return (\r\n                        <div key={row} style={{display: \"flex\", flexDirection: \"row\"}}>\r\n                            {row.map((cell) => {\r\n                                console.log(\"cell\", cell)\r\n                                return (\r\n                                    <div key={cell[1]} style={{ backgroundColor: cell[0] === 0 ? \"#cdc1b4\" : cell[0] === 2 ? \"#eee4da\" : cell[0] === 4 ? \"#eee1c9\" : cell[0] === 8 ? \"#f3b27a\" : cell[0] === 16 ? \"#f69664\" : cell[0] === 32 ? \"#f77c5f\" : cell[0] === 64 ? \"#f75f3b\" : cell[0] === 128 ? \"#edd073\" : \"white\", \r\n                                        margin: \"5px\", textAlign: \"center\", alignItems: \"center\", justifyContent: \"center\", width: \"60px\", height: \"60px\", borderRadius: \"10px\"}}>\r\n                                        <p>\r\n                                            <b>{cell[0] === 0 ? \"\" : cell[0]}</b>\r\n                                        </p>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n           </div>\r\n       </div>\r\n   );\r\n}\r\n\r\nexport default Board;","export const generateInitialBoard = () => {\r\n  var initialBoard = [\r\n    [[0, 0], [0, 1], [0, 2]],\r\n    [[0, 3], [0, 4], [0, 5]],\r\n    [[0, 6], [0, 7], [0, 8]],\r\n  ]\r\n\r\n  const firstEntry = getRandomArbitrary(0, 4);\r\n  const secondEntry = getRandomArbitrary(5, 8);\r\n\r\n  initialBoard[Math.floor(firstEntry/3)][firstEntry%3][0] = 2;\r\n  initialBoard[Math.floor(secondEntry/3)][secondEntry%3][0] = 2;\r\n\r\n  return JSON.parse(JSON.stringify(initialBoard));\r\n}\r\n\r\nexport const getRandomArbitrary = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport const handleRight = (board, scoreRef) => {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = board.length-1; j > 0; j--) {\r\n      if (board[i][j][0] === 0) {\r\n        \r\n        board[i][j][0] = board[i][j-1][0]\r\n        board[i][j-1][0] = 0\r\n      }\r\n    }\r\n    \r\n    for (let j = board.length - 1; j >= 1; j--) {\r\n      if (board[i][j - 1][0] === board[i][j][0]) {\r\n        board[i][j][0] = board[i][j][0] * 2;\r\n        scoreRef.current += board[i][j][0]\r\n        // setScore(score+board[i][j][0])\r\n        // move all numbers on the left to the right by one\r\n        if (j > 1) {\r\n          for (let k = j - 1; k > 0; k--) {\r\n            board[i][k][0] = board[i][k - 1][0];\r\n          }\r\n        }\r\n        board[i][0][0] = 0;\r\n      }\r\n    }\r\n    \r\n    for (let j = board.length-1; j > 0; j--) {\r\n      if (board[i][j][0] === 0) {\r\n        board[i][j][0] = board[i][j-1][0]\r\n        board[i][j-1][0] = 0\r\n      }\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\nexport const handleLeft = (board, scoreRef) => {\r\n  for (var i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board.length-1; j++) {\r\n      if (board[i][j][0] === 0) {\r\n        \r\n        board[i][j][0] = board[i][j+1][0]\r\n        board[i][j+1][0] = 0\r\n      }\r\n    }\r\n\r\n    for (var j = 0; j < board.length - 1; j++) {\r\n      //console.log(board[i][j], board[i][j+1])\r\n      if (board[i][j][0] === board[i][j + 1][0] && board[i][j][0] !== 0) {\r\n        //console.log(\"match\")\r\n        board[i][j][0] = board[i][j][0] * 2;\r\n        scoreRef.current += board[i][j][0]\r\n        // setScore(score+board[i][j][0])\r\n        // move all numbers on the left to the right by one\r\n        if (j < 1) {\r\n          for (let k = j+1; k < board.length-1; k++) {\r\n            board[i][k][0] = board[i][k + 1][0];\r\n          }\r\n        }\r\n        board[i][board.length-1][0] = 0;\r\n      }\r\n    }\r\n    \r\n    for (let j = 0; j < board.length-1; j++) {\r\n      if (board[i][j][0] === 0) {\r\n        \r\n        board[i][j][0] = board[i][j+1][0]\r\n        board[i][j+1][0] = 0\r\n      }\r\n    }\r\n}\r\n    return board;\r\n}\r\n\r\nexport const handleUp = (board, scoreRef) => {\r\n  for (var i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board.length-1; j++) {\r\n      if (board[j][i][0] === 0) {\r\n        board[j][i][0] = board[j+1][i][0]\r\n        board[j+1][i][0] = 0\r\n      }\r\n    }\r\n\r\n    for (var j = 0; j < board.length - 1; j++) {\r\n      if (board[j][i][0] === board[j+1][i][0] && board[j][i][0] !== 0) {\r\n        board[j][i][0] = board[j][i][0] * 2;\r\n        scoreRef.current += board[j][i][0]\r\n        // setScore(score+board[j][i][0])\r\n        // move all numbers on the left to the right by one\r\n        if (j < 1) {\r\n          for (let k = j+1; k < board.length-1; k++) {\r\n            board[k][i][0] = board[k+1][i][0];\r\n          }\r\n        }\r\n        board[board.length-1][i][0] = 0;\r\n      }\r\n    }\r\n    \r\n    for (let j = 0; j < board.length-1; j++) {\r\n      if (board[j][i][0] === 0) {\r\n        board[j][i][0] = board[j+1][i][0]\r\n        board[j+1][i][0] = 0\r\n      }\r\n    }\r\n}\r\n    return board;\r\n}\r\n\r\nexport const handleDown = (board, scoreRef) => {\r\n  for (var i = 0; i < board.length; i++) {\r\n  \r\n    for (let j = board.length-1; j > 0; j--) {\r\n      if (board[j][i][0] === 0) {\r\n        board[j][i][0] = board[j-1][i][0]\r\n        board[j-1][i][0] = 0\r\n      }\r\n    }\r\n    \r\n    for (var j = board.length-1; j >= 1; j--) {\r\n      //console.log(board[j][i], board[j+1][i])\r\n      if (board[j][i][0] === board[j-1][i][0]) {\r\n        //console.log(\"match\")\r\n        board[j][i][0] = board[j][i][0] * 2;\r\n        scoreRef.current += board[j][i][0]\r\n        // setScore(score+board[j][i][0])\r\n        // move all numbers on the left to the right by one\r\n        if (j > 1) {\r\n          for (let k = j-1; k > 0; k--) {\r\n            board[k][i][0] = board[k-1][i][0];\r\n          }\r\n        }\r\n        board[0][i][0] = 0;\r\n      }\r\n    }\r\n    \r\n    for (let j = board.length-1; j > 0; j--) {\r\n      if (board[j][i][0] === 0) {\r\n        board[j][i][0] = board[j-1][i][0]\r\n        board[j-1][i][0] = 0\r\n      }\r\n    }\r\n}\r\n    return board;\r\n}\r\n\r\nexport const addNewCell = (board) => {\r\n  var zeros = [];\r\n  for (let i=0; i<board.length; i++) {\r\n    for (let j=0; j<board.length; j++) {\r\n      if (board[i][j][0] === 0) {\r\n        zeros.push(board[i][j][1]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  if(zeros.length === 0){\r\n    console.log(\"No Zeros\")\r\n    return\r\n  }\r\n\r\n\r\n  var newCellIndex = getRandomArbitrary(0, zeros.length-1);\r\n  board[Math.floor(zeros[newCellIndex]/3)][zeros[newCellIndex]%3][0] = 2;\r\n}\r\n\r\nexport const checkBoardUpdate = (oldBoard, newBoard) => {\r\n  for (let i=0; i<oldBoard.length; i++) {\r\n    for (let j= 0; j < oldBoard.length; j++) {\r\n      if(oldBoard[i][j][0] !== newBoard[i][j][0]) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport const checkWon = (board) => {\r\n  for (let i=0; i<board.length; i++) {\r\n    for (let j =0; j < board.length; j++){\r\n      if(board[i][j][0] === 128){\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport const checkLost = (board) => {\r\n  // If any 0 found then not lost\r\n  for (let i=0; i<board.length; i++) {\r\n    for (let j=0; j<board.length; j++) {\r\n      if (board[i][j][0] === 0) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  var newBoard = JSON.parse(JSON.stringify(board))\r\n  var updatedBoard = 0;\r\n\r\n  updatedBoard = handleUp(newBoard);\r\n  if(checkBoardUpdate(board, updatedBoard)){\r\n    return false\r\n  }\r\n  updatedBoard = handleDown(newBoard);\r\n  if(checkBoardUpdate(board, updatedBoard)){\r\n    return false\r\n  }\r\n  updatedBoard = handleLeft(newBoard);\r\n  if(checkBoardUpdate(board, updatedBoard)){\r\n    return false\r\n  }\r\n  updatedBoard = handleRight(newBoard);\r\n  if(checkBoardUpdate(board, updatedBoard)){\r\n    return false\r\n  }\r\n\r\n  return true\r\n\r\n}","import Board from \"./Board\";\nimport { useEffect, useState } from \"react\";\nimport {generateInitialBoard, handleLeft, handleRight, handleUp, handleDown, addNewCell, checkBoardUpdate, checkWon, checkLost} from \"./helper\";\nimport { useRef } from \"react\";\n\n\nconst Panel = ({won, setWon, lost, setLost}) => {\n  const scoreRef = useRef(0)\n  const bestScoreRef = useRef(0)\n  // eslint-disable-next-line\n  const [score, setScore] = useState(0);\n  // eslint-disable-next-line\n  const [best, setBest] = useState(0);\n  const [boardMatrix, setBoardMatrix] = useState(generateInitialBoard())\n\n  console.log(\"Render\")\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (won === true || lost === true) return\n      var newBoard = JSON.parse(JSON.stringify(boardMatrix))\n      \n      console.log(newBoard);\n      console.log(\"updating\");\n      var updatedBoard = 0;\n      if (event.keyCode === 37) {\n        console.log(\"Left Arrow\");\n        updatedBoard = handleLeft(newBoard, scoreRef);\n      }\n\n      if (event.keyCode === 38) {\n        console.log(\"Up Arrow\");\n        updatedBoard = handleUp(newBoard, scoreRef);\n      }\n\n      if (event.keyCode === 39) {\n        console.log(\"Right Arrow\");\n        updatedBoard = handleRight(newBoard, scoreRef);\n      }\n\n      if (event.keyCode === 40) {\n        console.log(\"Down Arrow\");\n        updatedBoard = handleDown(newBoard, scoreRef);\n      }\n\n      if (updatedBoard !== 0) {\n        if(checkBoardUpdate(boardMatrix, updatedBoard)) {\n          if(checkWon(updatedBoard)){\n            setWon(true);\n          }\n          addNewCell(updatedBoard);\n        } else {\n          if(checkLost(updatedBoard)){\n            setLost(true);\n          }\n        }\n        \n        setBoardMatrix(updatedBoard);\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyPress)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    }\n    // eslint-disable-next-line\n  }, [boardMatrix])\n\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"5%\", fontFamily: \"'Open Sans', sans-serif\" }}>\n      <div style={{display: \"flex\", flexDirection: \"row\"}}>\n        <div style={{ margin: \"10px\", border: \"1px solid\", borderRadius: \"20px\"}}>\n          <p>\n            <b>Score:</b> <span style={{ color: \"green\" }}>{scoreRef.current}</span>\n          </p>\n        </div>\n        <div style={{ margin: \"10px\", border: \"1px solid\", borderRadius: \"20px\"}}>\n          <p>\n            <b>Best:</b> <span style={{ color: \"green\" }}>{bestScoreRef.current}</span>\n          </p>\n        </div>\n      </div>\n      <Board boardMatrix={boardMatrix} />\n      {won && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"5%\"}}>Victory</div>\n      )}\n      {lost && (\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"5%\"}}>Lost</div>\n      )}\n      <button onClick={() => {\n        setBoardMatrix(generateInitialBoard());\n        bestScoreRef.current = Math.max(scoreRef.current, bestScoreRef.current)\n        scoreRef.current = 0;\n        // if(score > best) setBest(score);\n        //setScore(0);\n        setWon(false);\n        setLost(false);\n      } } style={{ marginTop: \"10px\",backgroundColor: \"#3184ca\", borderRadius: \"10px\"}}>\n        Restart\n      </button>\n    </div>\n  );\n}\n\nexport default Panel;","import { useState } from \"react\";\r\nimport Panel from \"./Panel\";\r\n\r\nconst App = () => {\r\n  const [won, setWon] = useState(false)\r\n  const [lost, setLost] = useState(false)\r\n  return(\r\n    <Panel won={won} setWon={setWon} lost={lost} setLost={setLost}/>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}